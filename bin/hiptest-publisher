#!/usr/bin/env ruby

# Don't try to run this binary directly. Instead:
#
#   * `hiptest-publisher` if installed through rubygems, relying on the rubygem
#     wrapper
#
#   * `bundle exec ruby -I lib bin/hiptest-publisher` if doing hiptest-publisher
#     development. You can define an alias for this command and run it as if
#     you were running the gem natively.
#
#         alias hiptest-publisher='bundle exec ruby -I lib bin/hiptest-publisher'
#

require 'ruby_version'
require 'i18n'

I18n.load_path << Dir[File.expand_path("config/locales") + "/*.yml"]

# Ensure ruby version >= 2
if RubyVersion < '2.1.0'
  STDERR.puts(I18n.t('ruby_version.required_version', version: '2.1.0'))
  STDERR.puts(I18n.t('ruby_version.current_version', engine: RUBY_ENGINE, version: RUBY_VERSION))
  STDERR.puts(I18n.t('ruby_version.use_more_recent'))

  if RubyVersion.is? 2.0
    STDERR.puts(I18n.('ruby_version.support_ended', version: '2.0.0', year: '2016', month: '02', day: '24'))
  elsif RubyVersion.is? '1.9.3'
    STDERR.puts(I18n.('ruby_version.support_ended', version: '1.9.3', year: '2015', month: '02', day: '23'))
  elsif RubyVersion.is? '1.9.2'
    STDERR.puts(I18n.('ruby_version.support_ended', version: '1.9.2', year: '2014', month: '07', day: '31'))
  end
  exit 1
end

if RubyVersion < '2.3'
  STDERR.puts(I18n.t('ruby_version.current_version', engine: RUBY_ENGINE, version: RUBY_VERSION))
  STDERR.puts(I18n.t('ruby_version.deprecation_warning', version: '2.2'))
  STDERR.puts(I18n.t('ruby_version.support_ended', version: '2.2', year: '2018', month: '03', day: '31'))
end

require 'hiptest-publisher'
begin
  require 'pry' # only available in development
rescue LoadError
end

Hiptest::Publisher.new(ARGV).run
